<UserControl x:Class="LcmsNet.Notification.Views.NotificationSystemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:LcmsNet.Notification.ViewModels"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:cueBannerOverlay="clr-namespace:LcmsNetCommonControls.Controls.CueBannerOverlay;assembly=LcmsNetCommonControls"
             mc:Ignorable="d"
             d:DesignHeight="740" d:DesignWidth="938"
             d:DataContext="{d:DesignInstance {x:Type viewModels:NotificationSystemViewModel}, IsDesignTimeCreatable=True}">
    <Grid Margin="3">
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <xctk:InverseBoolConverter x:Key="BoolInvert" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0">
            <TabItem Header="Notification Settings">
                <Grid Margin="3" IsEnabled="{Binding SettingsDisabled, Converter={StaticResource BoolInvert}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2.5*" />
                        <ColumnDefinition Width="3*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>
                    <DataGrid Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="2" AutoGenerateColumns="False" RowHeaderWidth="0" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False" SelectionMode="Single" ItemsSource="{Binding DevicesList}" SelectedItem="{Binding SelectedDevice}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Notifiers" Width="*" IsReadOnly="True" Binding="{Binding BindsDirectlyToSource=True}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"  FontSize="18" FontWeight="Bold" Content="{Binding DeviceLabelText}" />
                    <Grid Grid.Row="1" Grid.Column="1" Margin="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="4*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Margin="3,0,3,0" Content="Unassigned Events" />
                        <!-- Using code-behind with GotFocus to run the desired control of the displayed data vs. the currently selected item -->
                        <ListBox Grid.Row="1" Margin="3,0" ItemsSource="{Binding EventsList}" SelectedItem="{Binding SelectedEvent}" IsEnabled="{Binding EventsListEnabled}" GotFocus="EventsListBox_GotFocus" />
                        <Label Grid.Row="2" Margin="3,10,3,0" Content="Events With Actions" />
                        <!-- Using code-behind with GotFocus to run the desired control of the displayed data vs. the currently selected item -->
                        <ListBox Grid.Row="3" Margin="3,0" ItemsSource="{Binding AssignedEventsList}" SelectedItem="{Binding SelectedEvent}" IsEnabled="{Binding EventsListEnabled}" GotFocus="EventsListBox_GotFocus" />
                        <Button Grid.Row="4" Margin="3" Command="{Binding IgnoreAllCommand}">
                            <Label Margin="15,3" Content="Ignore All" />
                        </Button>
                    </Grid>
                    <StackPanel Grid.Row="1" Grid.Column="2" Margin="3">
                        <Label FontSize="18" FontWeight="Bold" Content="{Binding SettingLabelText}" />
                        <GroupBox Header="Conditions" FontWeight="Bold" FontSize="14" IsEnabled="{Binding EventSettingsEnabled}">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <RadioButton Grid.Row="0" Grid.Column="0" Margin="3" GroupName="Conditions" FontWeight="Normal" FontSize="12" Content="If Number" IsChecked="{Binding ConditionNumberChecked}" />
                                <RadioButton Grid.Row="1" Grid.Column="0" Margin="3" GroupName="Conditions" FontWeight="Normal" FontSize="12" Content="If Text" IsChecked="{Binding ConditionTextChecked}" />
                                <RadioButton Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" GroupName="Conditions" FontWeight="Normal" FontSize="12" Content="If the event simply just happens" IsChecked="{Binding ConditionOccurredChecked}" />
                                <GroupBox Grid.Row="0" Grid.Column="1" Margin="5,5,5,20" FontWeight="Normal" FontSize="12" Header="Goes outside" IsEnabled="{Binding ConditionNumberChecked}">
                                    <Grid Margin="5">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Grid.Column="0" Margin="3" Content="Minimum (>)" />
                                        <Label Grid.Row="1" Grid.Column="0" Margin="3" Content="Maximum (&lt;)" />
                                        <xctk:DoubleUpDown Grid.Row="0" Grid.Column="1" Margin="3" Increment="0.01" Maximum="{Binding NumberConditionMaximum}" Value="{Binding NumberConditionMinimum}" FormatString="F2" />
                                        <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Margin="3" Increment="0.01" Minimum="{Binding NumberConditionMinimum}" Value="{Binding NumberConditionMaximum}" FormatString="F2" />
                                    </Grid>
                                </GroupBox>
                                <GroupBox Grid.Row="1" Grid.Column="1" Margin="5,5,5,20" FontWeight="Normal" FontSize="12" Header="Equal To" IsEnabled="{Binding ConditionTextChecked}">
                                    <TextBox Margin="5" Text="{Binding ConditionTextMatchString}" />
                                </GroupBox>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Actions To Take" FontWeight="Bold" FontSize="14" IsEnabled="{Binding EventSettingsEnabled}">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Margin="3" FontWeight="Normal" FontSize="12" Content="Then the system should do this:" />
                                <Label Grid.Row="1" Grid.Column="0" Margin="3" FontWeight="Normal" FontSize="12" Content="LC-Method" />
                                <ComboBox Grid.Row="0" Grid.Column="1" Margin="3" FontWeight="Normal" FontSize="12" ItemsSource="{Binding ActionsComboBoxOptions}" SelectedItem="{Binding SelectedAction}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                                <ComboBox Grid.Row="1" Grid.Column="1" Margin="3" FontWeight="Normal" FontSize="12" ItemsSource="{Binding MethodsComboBoxOptions}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedLCMethod}" IsEnabled="{Binding MethodSettingEnabled}" cueBannerOverlay:CueBannerService.CueBanner="Select" />
                            </Grid>
                        </GroupBox>
                        <Button Margin="3" HorizontalAlignment="Right" Command="{Binding IgnoreSettingCommand}">
                            <Label Margin="15,3" Content="Ignore This Setting"/>
                        </Button>
                    </StackPanel>
                    <Label Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" Height="156" Width="365" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="30" Content="Disabled" Visibility="{Binding SettingsDisabled, Converter={StaticResource BoolToVis}}" BorderThickness="1" BorderBrush="Black" />
                </Grid>
            </TabItem>
            <TabItem Header="Remote Monitoring">
                <StackPanel>
                    <GroupBox Margin="3" Header="Remote Status Monitoring">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Margin="5" VerticalAlignment="Center" Content="Write Instrument Health Status every" IsChecked="{Binding LogStatusToRemotePath}" />
                                <xctk:IntegerUpDown Margin="5" Width="66" VerticalAlignment="Center" Minimum="1" Value="{Binding RemoteStatusLogInterval}" />
                                <Label Margin="5" VerticalAlignment="Center" Content="minutes to the directory:" />
                            </StackPanel>
                            <TextBox Margin="30,5,5,5" Text="{Binding RemoteStatusLogPath}" />
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
        </TabControl>
        <DockPanel Grid.Row="1" LastChildFill="False">
            <Button DockPanel.Dock="Left" Margin="3" Command="{Binding DisableCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource LockImage}" MaxHeight="32" />
                    <Label VerticalAlignment="Center" Content="Disable"/>
                </StackPanel>
            </Button>
            <Button DockPanel.Dock="Left" Margin="3" Command="{Binding EnableCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource UnlockImage}" MaxHeight="32" />
                    <Label VerticalAlignment="Center" Content="Enable"/>
                </StackPanel>
            </Button>
            <Button DockPanel.Dock="Right" Margin="3" Command="{Binding SaveCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource SaveImage}" MaxHeight="20" />
                    <Label VerticalAlignment="Center" Content="Save"/>
                </StackPanel>
            </Button>
        </DockPanel>
    </Grid>
</UserControl>
