<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:LcmsNet.SampleQueue.ViewModels"
    x:Class="LcmsNet.SampleQueue.Views.SampleView"
    d:DesignHeight="500"
    d:DesignWidth="800"
    d:DataContext="{d:DesignInstance {x:Type viewModels:SampleControlViewModel}, IsDesignTimeCreatable=True}"
    mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key ="BoolToVis" />
        </Grid.Resources>
        <!-- The following is a dummy element to allow control over column visibility via the parent datacontext. -->
        <FrameworkElement x:Name="BaseDC" />
        <DataGrid AutoGenerateColumns="False" x:Name="SampleGrid"
                  d:DataContext="{d:DesignInstance {x:Type viewModels:SampleViewModel}, IsDesignTimeCreatable=True}"
                  ItemsSource="{Binding Samples}"
                  CanUserResizeRows="False" CanUserSortColumns="False" CanUserDeleteRows="False" CanUserAddRows="False"
                  SelectionMode="Extended"
                  SelectedItem="{Binding SelectedSample, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectionChanged="SampleGrid_OnSelectionChanged"
                  RowHeaderWidth="20" ColumnWidth="SizeToCells"
                  FrozenColumnCount="{Binding NumFrozenColumns, Mode=OneTime}">
            <DataGrid.InputBindings>
                <KeyBinding Key="Delete" Command="{Binding DataContext.RemoveSelectedCommand, Source={x:Reference BaseDC}}" />
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="ToolTip" Value="{Binding Sample.SampleErrors}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}" >
                    <Setter Property="Background" Value="{Binding RowBackColor}" />
                    <Setter Property="BorderBrush" Value="{Binding RowBackColor}" />
                    <Setter Property="Foreground" Value="{Binding RowForeColor}" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding RowSelectionBackColor}" />
                            <Setter Property="BorderBrush" Value="{Binding RowSelectionBackColor}" />
                            <Setter Property="Foreground" Value="{Binding RowSelectionForeColor}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="X" MinWidth="25" MaxWidth="30" Visibility="{Binding DataContext.CheckboxColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox x:Name="Queued_Checkbox" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Sample.HasNotRun}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="Status" Header="Status" MinWidth="54" MaxWidth="60" Binding="{Binding Status}" IsReadOnly="True" Visibility="{Binding DataContext.StatusColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}" >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" >
                            <Setter Property="ToolTip" Value="{Binding StatusToolTipText}" />
                            <Setter Property="Background" Value="{Binding RowBackColor}" />
                            <Setter Property="BorderBrush" Value="{Binding RowBackColor}" />
                            <Setter Property="Foreground" Value="{Binding RowForeColor}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="BorderBrush" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="Foreground" Value="{Binding RowSelectionForeColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <!-- Set the number format to always show 4 digits, with leading zeros -->
                <DataGridTextColumn x:Name="SequenceNumber" Header="Seq #" MaxWidth="45" Width="Auto" MinWidth="20" Binding="{Binding Sample.SequenceID, StringFormat=\{0:0000\}}" IsReadOnly="True" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="ToolTip" Value="{Binding SequenceToolTipText}" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="ColumnNumber" Header="Col #" MaxWidth="40" Width="Auto" MinWidth="20" Binding="{Binding ColumnNumber}" IsReadOnly="True" Visibility="{Binding DataContext.ColumnIdColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" >
                            <Setter Property="Background" Value="{Binding ColumnNumberBgColor}" />
                            <Setter Property="BorderBrush" Value="{Binding ColumnNumberBgColor}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="DatasetName" Header="Dataset Name" MinWidth="120" Binding="{Binding RequestName}" >
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" >
                            <Setter Property="IsEnabled" Value="{Binding EditAllowed}" />
                            <Setter Property="ToolTip" Value="{Binding RequestNameToolTipText}" />
                            <Setter Property="Background" Value="{Binding RequestNameBackColor}" />
                            <Setter Property="BorderBrush" Value="{Binding RequestNameBackColor}" />
                            <Setter Property="Foreground" Value="{Binding RowForeColor}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="BorderBrush" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="Foreground" Value="{Binding RowSelectionForeColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="Block" Header="Block" MaxWidth="40" MinWidth="40" Binding="{Binding Sample.DmsData.Block}" IsReadOnly="True" Visibility="{Binding DataContext.BlockColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn x:Name="RunOrder" Header="Run Order" MaxWidth="40" MinWidth="40" Binding="{Binding Sample.DmsData.RunOrder}" IsReadOnly="True" Visibility="{Binding DataContext.RunOrderColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="PAL Tray" Width="Auto" MinWidth="40" Visibility="{Binding DataContext.PalTrayColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="PALTraySelect" SelectedItem="{Binding Sample.PAL.PALTray, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding PalTrayComboBoxOptions}" IsEnabled="{Binding EditAllowed}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="PAL Vial" MaxWidth="55" Width="Auto" MinWidth="40" Binding="{Binding Sample.PAL.Well}" Visibility="{Binding DataContext.PalVialColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" >
                            <Setter Property="IsEnabled" Value="{Binding EditAllowed}" />
                            <Setter Property="Background" Value="{Binding RowBackColor}" />
                            <Setter Property="BorderBrush" Value="{Binding RowBackColor}" />
                            <Setter Property="Foreground" Value="{Binding RowForeColor}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="BorderBrush" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="Foreground" Value="{Binding RowSelectionForeColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Volume" MaxWidth="50" Width="Auto" MinWidth="40" Binding="{Binding Sample.Volume}" Visibility="{Binding DataContext.VolumeColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" >
                            <Setter Property="IsEnabled" Value="{Binding EditAllowed}" />
                            <Setter Property="Background" Value="{Binding RowBackColor}" />
                            <Setter Property="BorderBrush" Value="{Binding RowBackColor}" />
                            <Setter Property="Foreground" Value="{Binding RowForeColor}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="BorderBrush" Value="{Binding RowSelectionBackColor}" />
                                    <Setter Property="Foreground" Value="{Binding RowSelectionForeColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="LC Method" MinWidth="80" Visibility="{Binding DataContext.LcMethodColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="LCMethodSelect" SelectedItem="{Binding Sample.LCMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" ItemsSource="{Binding LcMethodComboBoxOptions}" IsEnabled="{Binding EditAllowed}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Instrument Method" MinWidth="80" Visibility="{Binding DataContext.InstrumentMethodColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="InstrumentMethodSelect" SelectedItem="{Binding InstrumentMethod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" ItemsSource="{Binding InstrumentMethodComboBoxOptions}" IsEnabled="{Binding EditAllowed}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Dataset Type" MinWidth="80" Visibility="{Binding DataContext.DatasetTypeColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="DatasetTypeSelect" SelectedItem="{Binding Sample.DmsData.DatasetType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding DatasetTypeComboBoxOptions}" IsEnabled="{Binding EditAllowed}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn x:Name="BatchID" Header="Batch ID" MaxWidth="55" MinWidth="40" Binding="{Binding Sample.DmsData.Batch}" IsReadOnly="True" Visibility="{Binding DataContext.BatchIdColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}" >
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="Cart Config" MinWidth="80" Visibility="{Binding DataContext.CartConfigColumnVisible, Converter={StaticResource BoolToVis}, Source={x:Reference BaseDC}}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="DatasetTypeSelect" SelectedItem="{Binding Sample.DmsData.CartConfigName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding CartConfigComboBoxOptions}" IsEnabled="{Binding EditAllowed}" ToolTip="{Binding CartConfigError}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
