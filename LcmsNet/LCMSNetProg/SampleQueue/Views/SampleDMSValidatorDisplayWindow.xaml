<Window x:Class="LcmsNet.SampleQueue.Views.SampleDMSValidatorDisplayWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:LcmsNet.SampleQueue.ViewModels"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:cueBannerOverlay="clr-namespace:WpfExtras.CueBannerOverlay;assembly=WpfExtras"
        mc:Ignorable="d"
        Title="Sample Validator" Height="703" Width="801" WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance {x:Type viewModels:SampleDMSValidatorDisplayViewModel}, IsDesignTimeCreatable=True}">
    <Grid>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <ContextMenu x:Key="BaseContextMenu">
                <MenuItem Header="FillDown All" Command="{Binding DataContext.FillDownAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown Blank" Command="{Binding DataContext.FillDownBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <Separator />
                <MenuItem Header="FillDown EMSL Usage All" Command="{Binding DataContext.FillDownUsageAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Usage Blank" Command="{Binding DataContext.FillDownUsageBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Proposal All" Command="{Binding DataContext.FillDownProposalAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Proposal Blank" Command="{Binding DataContext.FillDownProposalBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Users All" Command="{Binding DataContext.FillDownUsersAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Users Blank" Command="{Binding DataContext.FillDownUsersBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown Experiment All" Command="{Binding DataContext.FillDownExperimentAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown Experiment Blank" Command="{Binding DataContext.FillDownExperimentBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
            </ContextMenu>
            <ContextMenu x:Key="TextboxContextMenu">
                <MenuItem Header="FillDown All" Command="{Binding DataContext.FillDownAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown Blank" Command="{Binding DataContext.FillDownBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <Separator />
                <MenuItem Header="FillDown EMSL Usage All" Command="{Binding DataContext.FillDownUsageAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Usage Blank" Command="{Binding DataContext.FillDownUsageBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Proposal All" Command="{Binding DataContext.FillDownProposalAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Proposal Blank" Command="{Binding DataContext.FillDownProposalBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Users All" Command="{Binding DataContext.FillDownUsersAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown EMSL Users Blank" Command="{Binding DataContext.FillDownUsersBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown Experiment All" Command="{Binding DataContext.FillDownExperimentAll, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <MenuItem Header="FillDown Experiment Blank" Command="{Binding DataContext.FillDownExperimentBlank, Source={x:Reference BaseDC}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
                <Separator />
                <MenuItem Command="ApplicationCommands.Cut" />
                <MenuItem Command="ApplicationCommands.Copy" />
                <MenuItem Command="ApplicationCommands.Paste" />
            </ContextMenu>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- DataContext for contextMenu commands -->
        <FrameworkElement x:Name="BaseDC" />
        <ListView Grid.Row="0" Name="SampleListView" ItemsSource="{Binding Samples}" SelectedItem="{Binding SelectedItem}" SelectionMode="Extended" SelectionChanged="ListView_OnSelectionChanged" d:DataContext="{d:DesignInstance {x:Type viewModels:SampleDMSValidationViewModel}, IsDesignTimeCreatable=True}" ContextMenu="{StaticResource BaseContextMenu}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="" Width="30">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Image Source="{StaticResource AllIsGoodImage}" MaxWidth="16" Visibility="{Binding IsSampleValid, Converter={StaticResource BoolToVis}}" IsHitTestVisible="False" />
                                    <Image Source="{StaticResource ButtonDeleteRedImage}" MaxWidth="16" Visibility="{Binding SampleNotValid, Converter={StaticResource BoolToVis}}" IsHitTestVisible="False" />
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Dataset Name" Width="200" DisplayMemberBinding="{Binding Sample.DmsData.DatasetName}" />
                    <GridViewColumn Header="DMS Request # (ID)" Width="130">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <xctk:IntegerUpDown Name="EmslRequestId" Width="115" Minimum="0" Maximum="2147483647" Value="{Binding Sample.DmsData.RequestID}" KeyUp="UIElement_OnKeyUp" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Usage Type" Width="115">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox Width="100" Name="EmslUsage" SelectedItem="{Binding Sample.DmsData.EMSLUsageType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding UsageTypeComboBoxOptions}" IsEnabled="{Binding CanChangeEmslData}" KeyUp="UIElement_OnKeyUp" cueBannerOverlay:CueBannerService.CueBanner="Select" ContextMenu="{StaticResource BaseContextMenu}">
                                    <ComboBox.Style>
                                        <Style TargetType="{x:Type ComboBox}">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <!-- Color the combo box red with white text when it is not valid, but remove the coloring when the drop down is open, so they can actually read the text. -->
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource Self}}" Value="False" />
                                                        <Condition Binding="{Binding UsageTypeValid}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="Background" Value="Red" />
                                                        <Setter Property="Foreground" Value="White" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                </ComboBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Proposal ID" Width="85">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Width="70" Name="EmslProposalId" Text="{Binding Sample.DmsData.EMSLProposalID}" IsEnabled="{Binding CanChangeEmslData}" KeyUp="UIElement_OnKeyUp" ContextMenu="{StaticResource TextboxContextMenu}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ProposalIdValid}" Value="False">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="EMSL User(s)" Width="95">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Width="80" Name="EmslUsers" Text="{Binding Sample.DmsData.EMSLProposalUser}" IsEnabled="{Binding CanChangeEmslData}" KeyUp="UIElement_OnKeyUp" ContextMenu="{StaticResource TextboxContextMenu}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding UserListValid}" Value="False">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Experiment Name" Width="115">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Width="100" Name="Experiment" Text="{Binding Sample.DmsData.Experiment}" IsEnabled="{Binding CanChangeEmslData}" KeyUp="UIElement_OnKeyUp" ContextMenu="{StaticResource TextboxContextMenu}">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ExperimentValid}" Value="False">
                                                    <Setter Property="Background" Value="Red" />
                                                    <Setter Property="Foreground" Value="White" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <StackPanel Grid.Row="1" Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button Margin="3" Height="40" Width="80" IsDefault="False" IsCancel="True" Content="Cancel" Click="Cancel_OnClick" />
            <Button Margin="3" Height="40" Width="80" IsDefault="False" Content="OK" Click="Ok_OnClick" />
        </StackPanel>
    </Grid>
</Window>
